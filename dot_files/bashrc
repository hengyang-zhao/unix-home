# unix-home bashrc project

if [ -f /etc/bashrc ]; then
	source /etc/bashrc
fi

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# unlimited command history
HISTSIZE=
HISTFILESIZE=

# add time stamp for history command
HISTTIMEFORMAT="%Y-%m-%d %T  "

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

if [ -f ~/.bash_aliases ]; then
	. ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
	. /etc/bash_completion
fi

alias __do_once='[ "$BASHRC_APPLIED" != yes ]'

# Needs to know MY_RC_HOME first
source ~/.site_env/bash/my_rc_home.sh

# Auxiliary scripts
if [ -d $MY_RC_HOME/bashrc.d ]; then
	for i in $MY_RC_HOME/bashrc.d/*.sh ; do
		if [ -r "$i" ]; then
			if [ "${-#*i}" != "$-" ]; then
				. "$i"
			else
				. "$i" >/dev/null 2>&1
			fi
		fi
	done
fi

__do_once && BASHRC_APPLIED=yes

if [ "$FORCE_TMUX" = yes ] && [ -z "$TMUX" ]; then
    exec tmux new -As main
elif [ "$FORCE_TMUX" = no ]; then
    :
elif __has tmux && [ "$AUTO_ATTACH_TMUX" = yes ] && [ -z "$TMUX" ] && [ -n "$SSH_CONNECTION" ]; then
    exec tmux new -As main
fi

PROMPT_COMMAND=__do_after_command
trap __do_before_command DEBUG


# vim: set ft=sh:

